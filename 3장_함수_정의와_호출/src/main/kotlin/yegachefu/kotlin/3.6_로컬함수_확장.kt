/**
 * 중복 코드를 줄이기 좋은 코틀린의 로컬 함수 확장 기능!
 *
 * 자바에서 중복을 줄이기 위해서 메소드 추출 리팩토링을
 * 적용해서 긴 메소드를 부분부분 나눠서 재활용 하고 있다.
 *
 * 그러나 양이 많아질 수록 클래스 안의 작은 메소드가 많아지고
 * 각 메소드 사이의 관계를 파악하기 힘들어서 코드를 이해하기 더 어려워 질 수 있다.
 * ex) 포르쉐 Product 의 Price 계산쪽 객체와 와 Store 의 detailUrl 계산 클래스의 메소드들...(ㅠㅠ)
 *
 * _3_6_로컬함수_확장KtTest 참고
 *
 */
package yegachefu.kotlin

fun main() {
}
